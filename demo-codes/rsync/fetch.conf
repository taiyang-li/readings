# rsync源文件的类型, 全量(full)或增量(incremental) 
file_type=incremental

[src]
# rsync源文件的路径,格式为 rsync源服务器的ip或域名:rsync配置名
# path=10.152.225.59::listener_bidielog
path=10.136.16.41::listener_bidielog
# path=10.139.32.109::rsync-full-file

# rsync源文件的前缀(如果要rsync不带时间戳的文件，设置file_prefix=文件名， 
# file_separator 和 file_suffix为空即可)
file_prefix=bid_ielog

# rsync源文件的分隔符
file_separator=.

# rsync源文件的后缀格式(%Y %m %d %H %M分别表示年 月 日 时 分)
file_suffix=%Y%m%d%H%M

# 是否对在rsync目录下进行done file检查(默认将其done file命名方式为
# done.<源文件名>, 并假设done file与源文件处于同一目录下)
# yes: 进行done file检查 no: 反之
use_done=no

[dst]
# rsync目的文件路径
path=/data/listener-xuri/bidielog

# rsync目的文件前缀 
file_prefix=bid_ielog

# rsync目的文件分隔符
file_separator=.

# rsync目的文件后缀格式
file_suffix=%Y%m%d%H%M

# rsync目的文件后缀时间戳来源，有两选项：
# 1. from_current_time: 根据当前时间决定时间戳
# 2. from_source_file: 根据rsync源文件的时间戳决定时间戳
how_to_name=from_source_file

# rsync目的文件的保留时间, 单位天
save_days=10

# rsync目的文件成功后，是否生成done file
# yes: 生成 no:反之(done file与目的文件处于同一目录下，命名方式为 done.<目的文件名>)
use_done=no

[log]
# log 文件路径
# 日志分为两种，info日志和error日志 
info_log=./log/info.log
error_log=./log/error.log

[lock]
# 进程锁文件路径
file=./lock/fetch-bidielog.lock

[savepoint]
# 断点文件路径(只有file_type=incremental时才生成断点)
file=./savepoint/bid.save
