/* rpclist.h
 *
 * Copyright (c) 2000 Sean Walton and Macmillan Publishers.  Use may be in
 * whole or in part in accordance to the General Public License (GPL).
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
*/

/*****************************************************************************/
/*** rpclist.h                                                             ***/
/***                                                                       ***/
/*****************************************************************************/

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPCLIST_H_RPCGEN
#define _RPCLIST_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct NodeStruct *TNode;

struct NodeStruct {
	char *Name;
	TNode Next;
};
typedef struct NodeStruct NodeStruct;

struct NodeUnion {
	int Err;
	union {
		TNode NameList;
	} NodeUnion_u;
};
typedef struct NodeUnion NodeUnion;

#define LISTPROG 2000035
#define LISTVERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define GETLIST 1
extern  NodeUnion * getlist_1(char **, CLIENT *);
extern  NodeUnion * getlist_1_svc(char **, struct svc_req *);
extern int listprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define GETLIST 1
extern  NodeUnion * getlist_1();
extern  NodeUnion * getlist_1_svc();
extern int listprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_TNode (XDR *, TNode*);
extern  bool_t xdr_NodeStruct (XDR *, NodeStruct*);
extern  bool_t xdr_NodeUnion (XDR *, NodeUnion*);

#else /* K&R C */
extern bool_t xdr_TNode ();
extern bool_t xdr_NodeStruct ();
extern bool_t xdr_NodeUnion ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPCLIST_H_RPCGEN */
